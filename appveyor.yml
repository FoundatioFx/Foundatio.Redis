version: '{build}'
image: ubuntu
clone_depth: 2

services:
  - docker

pull_requests:
  do_not_increment_build_number: true

init:
  - git config --global core.autocrlf input

before_build:
  - |
    VERSION_PREFIX=$(sed -n 's/.*<VersionPrefix>\([^<]*\)<\/VersionPrefix>.*/\1/p' <<< cat ./build/common.props)
    if [ $APPVEYOR_REPO_TAG != "true" ]; then
      VERSION_SUFFIX="$APPVEYOR_BUILD_NUMBER-pre"
      VERSION="$VERSION_PREFIX.$VERSION_SUFFIX"
      echo "Version: $VERSION"
    else
      VERSION_SUFFIX=$APPVEYOR_BUILD_NUMBER
      VERSION="$VERSION_PREFIX.$VERSION_SUFFIX"
      echo "Version: $VERSION Tag: $APPVEYOR_REPO_TAG_NAME"
    fi
    appveyor UpdateBuild -Version $VERSION

build_script:
  - docker build --target testrunner -t foundatio:test --build-arg VERSION_SUFFIX=${VERSION_SUFFIX} .
  - docker run -d -m 2g -p 7000-7006:7000-7006 -e IP=0.0.0.0 -e STANDALONE=true grokzen/redis-cluster:4.0.11
  - docker run -e APPVEYOR_API_URL --net=host -v $(pwd)/artifacts:/app/artifacts foundatio:test

after_build:
  - docker build --target pack -t foundatio:pack --build-arg VERSION_SUFFIX=${VERSION_SUFFIX} .
  - docker run --rm -v $(pwd)/artifacts:/app/artifacts foundatio:pack

artifacts:
  - path: artifacts/*.nupkg
    name: NuGet
  - path: artifacts/*.trx
    name: Test Results

deploy:
  - provider: Environment
    name: MyGet
    on:
      APPVEYOR_REPO_TAG: false
  - provider: Environment
    name: NuGet
    on:
      APPVEYOR_REPO_TAG: true
  - provider: GitHub
    auth_token:
      secure: 0s81q7bweVLTFSOKxnIhan7el6bIFiN8HJ1kYJzOkeFXX7wgGSq9bs/rV53X9qpf
    draft: true
    on:
      APPVEYOR_REPO_TAG: true

notifications:
  - provider: Slack
    auth_token:
      secure: GniMpFE62HprSyQNQoej/VSBnxn2GNnTrca3BnF8+ikMdqduO4Ts4t297teZF6wDAmGwnOtXusctUla8+WxLFkIztvVCS2Z1RG/DvEDYoc0=
    channel: '#notifications'
